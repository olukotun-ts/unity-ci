version: 2.1

orbs:
  cli: circleci/circleci-cli@0.1.4
  orb-tools: circleci/orb-tools@8.27.4
  unity-ci: mizotake/unity-ci:0.1.3
  slack: circleci/slack@3.3.0

executors:
  unity_executor:
    docker:
      - image: gableroux/unity3d:2019.1.0f2

commands:
  setup:
    description: 'Unity Test Setup'
    steps:
      - run:
          name: craete project
          command: |
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -createProject ./
            cp -pR ./ci-test-tools/* ./Assets/
          working_directory: .

jobs:
  unity-ci-build-windows:
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/build:
          platform: Win
          method: Build.Execute
      - unity-ci/zip:
          directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-build-webgl:
    # ex. gableroux/unity3d:vertion-webgl
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/build:
          platform: WebGL
          method: Build.Execute
      - unity-ci/zip:
          directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-build-osxuniversal:
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/build:
          platform: OSXUniversal
          method: Build.Execute
      - unity-ci/zip:
          directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-test-editmode:
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/test:
          mode: editmode
  unity-ci-test-playmode:
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/test:
          mode: playmode
  unity-ci-execute-method:
    executor: unity_executor
    steps:
      - checkout
      - unity-ci/unity_activate
      - setup
      - unity-ci/execute_method:
          method: Build.Execute
  unity-ci-activate-fromFile:
    executor: unity_executor
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - attach_workspace:
          at: /activateTools
      - unity-ci/unity_activate:
          licenseFromPath: /activateTools/Unity.ulf
      - setup
      - save_cache:
          key: unity-license
          paths:
            - /activateTools/Unity.ulf
      - unity-ci/execute_method:
          method: Build.Execute

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - orb-tools/lint
      - unity-ci-build-windows:
          requires:
            - orb-tools/lint
      # - unity-ci-build-webgl:
      #     requires:
      #       - orb-tools/lint
      - unity-ci-build-osxuniversal:
          requires:
            - orb-tools/lint
      - unity-ci-test-editmode:
          requires:
            - orb-tools/lint
      - unity-ci-test-playmode:
          requires:
            - orb-tools/lint
      - unity-ci-execute-method:
          requires:
            - orb-tools/lint
      - unity-ci/outputAlf:
          exec: unity_executor
          requires:
            - orb-tools/lint
      - unity-ci/cloneActivateTool:
          requires:
            - unity-ci/outputAlf
      - unity-ci/outputUlf:
          requires:
            - unity-ci/cloneActivateTool
      - unity-ci-activate-fromFile:
          requires:
            - unity-ci/outputUlf
      - orb-tools/publish-dev:
          name: publish dev orb
          requires:
            - unity-ci-build-windows
            # - unity-ci-build-webgl
            - unity-ci-build-osxuniversal
            - unity-ci-test-editmode
            - unity-ci-test-playmode
            - unity-ci-execute-method
            - unity-ci-activate-fromFile
          orb-path: src/orbs/unity-ci.yml
          orb-name: mizotake/unity-ci
          sha-version-ref: dev:0.0.1
          checkout: true
          publish-alpha-version: false
          filters:
            branches:
              ignore: master
      - slack/approval-notification:
          requires:
            - unity-ci-build-windows
            # - unity-ci-build-webgl
            - unity-ci-build-osxuniversal
            - unity-ci-test-editmode
            - unity-ci-test-playmode
            - unity-ci-execute-method
            - unity-ci-activate-fromFile
          message: '本番環境へのデプロイを承認してください'
          mentions: 'here'
          color: '#F5E911'
          filters:
            branches:
              only: master
      - approve_deploy:
          name: increment 0.0.1
          type: approval
          requires:
            - slack/approval-notification
          filters:
            branches:
              only: master
      - approve_deploy:
          name: increment 0.1.0
          type: approval
          requires:
            - slack/approval-notification
          filters:
            branches:
              only: master
      - approve_deploy:
          name: increment 1.0.0
          type: approval
          requires:
            - slack/approval-notification
          filters:
            branches:
              only: master
      - orb-tools/dev-promote-prod:
          name: publish orb increment 0.0.1
          orb-name: mizotake/unity-ci
          orb-ref: dev:0.0.1
          requires:
            - increment 0.0.1
          filters:
            branches:
              only: master
      - orb-tools/dev-promote-prod:
          name: publish orb increment 0.1.0
          release: minor
          orb-name: mizotake/unity-ci
          orb-ref: dev:0.0.1
          requires:
            - increment 0.1.0
          filters:
            branches:
              only: master
      - orb-tools/dev-promote-prod:
          name: publish orb increment 1.0.0
          release: major
          orb-name: mizotake/unity-ci
          orb-ref: dev:0.0.1
          requires:
            - increment 1.0.0
          filters:
            branches:
              only: master
